type Crouleur {
  identifier: String! @unique
  name: String
  email: String @unique
}

type Commitment {
  entrytitle: String!
  duedate: String
  complete: Boolean!
  selfAsParent: ParentToChildren! @relation(name:"self")
  parent: ParentToChildren @relation(name:"parent-child")
  rank: Int
  crouleur: Crouleur
}

type ParentToChildren {
  link: Commitment! @relation(name:"self")
  children: [Commitment] @relation(name:"parent-child")
  crouleur: Crouleur
}


type Prerequisite {
        commitmentId: String!
        prerequisiteId: String!
        commitment: Commitment!
        prerequisite: Commitment!
        crouleur: Crouleur!
}

type CustomCommitment @embedded{
  entrytitle: String!
  duedate: String
  complete: Boolean!
  parent: Commitment
  rank: Int
  crouleur: Crouleur
}

type Query {
  getCustomCommitments: [CustomCommitment!] @resolver(name: "get_custom_commitments")
  allCrouleurs: [Crouleur!]
  allCommitments: [Commitment!]
  allParentsToChilren: [ParentToChildren!]
}